// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/docker-existing-dockerfile
{
	"name": "ros_container",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"build": {
		"dockerfile": "../Dockerfile",
		"args": {
			"NAME" : "something",
		}
	},
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.	

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.profile.linux": "/bin/bash",
	},

	"containerEnv": {
		"DISPLAY":"${localEnv:DISPLAY}",
		"QT_X11_NO_MITSHM":"1",
		"XAUTHORITY" : "${localEnv:XAUTH}"
	},
	
	"runArgs": [
		"--name","ros_container",
		"--runtime=nvidia", 
		"--privileged",
		"--volume","/tmp/.X11-unix:/tmp/.X11-unix:rw",
		"--volume", "${localEnv:HOME}/.bash_history:/home/ros/.bash_history",
		"-v${localWorkspaceFolderBasename}:/workspace"
	],

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		
	],


	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [9090],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
